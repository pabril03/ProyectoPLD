[gd_scene load_steps=16 format=3 uid="uid://bqyc08ycvscj7"]

[ext_resource type="Texture2D" uid="uid://dj4gulqpv11si" path="res://0x72_DungeonTilesetII_v1.7/frames/big_demon_idle_anim_f0.png" id="2_ya07s"]
[ext_resource type="Texture2D" uid="uid://dnq505hhtmgvf" path="res://0x72_DungeonTilesetII_v1.7/frames/big_demon_idle_anim_f1.png" id="3_lmhje"]
[ext_resource type="Texture2D" uid="uid://sbwyp5lwb62t" path="res://0x72_DungeonTilesetII_v1.7/frames/big_demon_idle_anim_f2.png" id="4_kwscy"]
[ext_resource type="Texture2D" uid="uid://c0eml6eey1ptv" path="res://0x72_DungeonTilesetII_v1.7/frames/big_demon_idle_anim_f3.png" id="5_0fopw"]
[ext_resource type="Texture2D" uid="uid://d00mpi3ochuce" path="res://0x72_DungeonTilesetII_v1.7/frames/big_demon_run_anim_f0.png" id="6_slki2"]
[ext_resource type="Texture2D" uid="uid://cel20mvwy8778" path="res://0x72_DungeonTilesetII_v1.7/frames/big_demon_run_anim_f1.png" id="7_qnc2o"]
[ext_resource type="Texture2D" uid="uid://cd2fjikwjf7np" path="res://0x72_DungeonTilesetII_v1.7/frames/big_demon_run_anim_f2.png" id="8_chge0"]
[ext_resource type="Texture2D" uid="uid://ckl5d2tj61f2p" path="res://0x72_DungeonTilesetII_v1.7/frames/big_demon_run_anim_f3.png" id="9_jhkbs"]
[ext_resource type="Script" uid="uid://csji0ese7t130" path="res://scripts/IA/StateMachine.gd" id="10_e7kkc"]
[ext_resource type="Script" uid="uid://bnj02hs5d50e" path="res://scripts/IA/enemyIdle.gd" id="11_e7kkc"]
[ext_resource type="Script" uid="uid://d2dloh50f34bj" path="res://scripts/IA/enemyFollow.gd" id="12_ya07s"]

[sub_resource type="GDScript" id="GDScript_e7kkc"]
script/source = "extends CharacterBody2D

@onready var animaciones: AnimatedSprite2D = $AnimatedSprite2D
@onready var barra_vida: ProgressBar = $ProgressBar
var cuerpo_dentro : bool = false
const DeathAnimation: PackedScene = preload(\"res://escenas/VFX/death_animation.tscn\")

signal health_changed(new_health)
var max_health = 20
var health = 20
var enemy_id: int
var tipo_enemigo
var damage_on_touch = 2
var muriendo = false
var cuerpos_en_contacto: Array = []

var player_game : CharacterBody2D

@onready var detector: Area2D = $Detector
@onready var damage_timer: Timer = $DamageTimer


func _physics_process(_delta: float) -> void:
	move_and_slide()
	
	if velocity.length() > 0:
		animaciones.play(\"run\")
	
	if velocity.x > 0:
		animaciones.flip_h = false
	else:
		animaciones.flip_h = true
		

func _ready() -> void:
	
	# El enemigo colisiona con el resto de jugadores
	collision_layer = 1 << 7
	
	for layer in range(1, 5):
		collision_mask |= 1 << layer
		
	# Conectar la señal 'health_changed' a la función que actualiza la barra de vida
	connect(\"health_changed\", Callable(self, \"_on_health_changed\"))
	# Inicializar la barra de vida con el valor máximo de salud
	emit_signal(\"health_changed\", health)
	
	# Hacemos que el detector solo \"vea\" jugadores
	detector.collision_layer = 1 << 7
	for layer in range(1, 5):
		detector.collision_mask |= 1 << layer
	
	# Conectamos el detector de colisiones
	detector.connect(\"body_entered\", Callable(self, \"_on_body_entered\"))
	detector.connect(\"body_exited\", Callable(self, \"_on_body_exited\"))
	damage_timer.connect(\"timeout\", Callable(self, \"_on_damage_timer_timeout\"))
	damage_timer.start()
	
	#Barra de vida
	
	barra_vida.max_value = max_health
	barra_vida.min_value = 0
	
	barra_vida.value = health
	
	connect(\"health_changed\", Callable(self, \"_on_entity_health_changed\"))
	

func get_shooter_id() -> int:
	return enemy_id

func _process(_delta: float) -> void:
	if(health <= 0):
		queue_free()


func generar_frase(autor: int, type: String) -> String:
	var frases = [
		\"¡Monstruo %s aniquilado! Excelente trabajo, jugador %d.\" % [type, autor],
		\"Has vencido al temible %s, ¡imbatible!.\" % [type],
		\"Jugador %d destrozó al %s sin piedad.\" % [autor, type],
		\"El %s no supo qué le esperaba contra ti, jugador %d.\" % [type, autor],
		\"¡Victoria! El %s ha sido erradicado del reino.\" % [type],
		\"%s eliminado con maestría por el jugador %d.\" % [type, autor],
		\"Otro %s menos en este mundo, cortesía de jugador %d.\" % [type, autor],
		\"El %s cayó ante tu habilidad, jugador %d.\" % [type, autor],
		\"Has sobrevivido a la amenaza %s y la has destruido.\" % [type],
		\"Jugador %d: 1 — %s: 0. Punto para ti.\" % [ autor, type],
	]

	return frases[randi() % frases.size()]

func set_damage_on_touch(damage: float) -> void:
	damage_on_touch = damage

func take_damage(amount: float, autor: int, _aux: String = \"Jugador\", _aux2: String = \"Disparo\") -> void:
	if !muriendo:
		health = clamp(health - amount, 0, max_health)
		emit_signal(\"health_changed\", health)
		
		if health <= 0:
			muriendo = true
			var msj = generar_frase(autor, String(tipo_enemigo))
			print(msj)

			# Mostramos los efectos de muerte
			var death_FX = DeathAnimation.instantiate()
			# La situamos donde estaba el jugador al morir
			death_FX.global_position = global_position
			var world = get_tree().current_scene.get_node(\"SplitScreen2D\").play_area
			world.add_child(death_FX)

			queue_free()
	
func heal(amount: float) -> void:
	health = clamp(health + amount, 0, max_health)
	emit_signal(\"health_changed\", health)


func _on_area_2d_body_entered(body: Node2D) -> void:
	if body.is_in_group(\"player\"):
		cuerpo_dentro = true
		player_game = body
		if body.has_method(\"take_damage\"):
			if not cuerpos_en_contacto.has(body):
				cuerpos_en_contacto.append(body)
				if not body.get_escudo_activo():
					body.take_damage(damage_on_touch, enemy_id, tipo_enemigo, \"mordisco\")
					body.aplicar_quemadura()


func _on_area_2d_body_exited(body: Node2D) -> void:
	if body.is_in_group(\"player\"):
		cuerpo_dentro = false
		player_game = null
		body.quitar_quemadura()
	if cuerpos_en_contacto.has(body):
		cuerpos_en_contacto.erase(body)

func _on_entity_health_changed(new_health):
	barra_vida.value = new_health
	
	if new_health < max_health:
		barra_vida.show()   # Se muestra si se ha perdido salud
	else:
		barra_vida.hide()   # Se oculta si la salud es completa

func _on_damage_timer_timeout() -> void:
	for body in cuerpos_en_contacto:
		if is_instance_valid(body):
			if body.is_in_group(\"player\") and body.has_method(\"take_damage\"):
				if not body.get_escudo_activo():
					body.take_damage(damage_on_touch, enemy_id, tipo_enemigo, \"mordisco\")
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_slki2"]
radius = 16.0
height = 34.0

[sub_resource type="SpriteFrames" id="SpriteFrames_qnc2o"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_ya07s")
}, {
"duration": 1.0,
"texture": ExtResource("3_lmhje")
}, {
"duration": 1.0,
"texture": ExtResource("4_kwscy")
}, {
"duration": 1.0,
"texture": ExtResource("5_0fopw")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("6_slki2")
}, {
"duration": 1.0,
"texture": ExtResource("7_qnc2o")
}, {
"duration": 1.0,
"texture": ExtResource("8_chge0")
}, {
"duration": 1.0,
"texture": ExtResource("9_jhkbs")
}],
"loop": true,
"name": &"run",
"speed": 5.0
}]

[sub_resource type="CircleShape2D" id="CircleShape2D_7ip33"]
radius = 81.0062

[node name="CharacterBody2D" type="CharacterBody2D"]
script = SubResource("GDScript_e7kkc")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CapsuleShape2D_slki2")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
scale = Vector2(1.25, 1.25)
sprite_frames = SubResource("SpriteFrames_qnc2o")
animation = &"run"

[node name="Detector" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Detector"]
shape = SubResource("CircleShape2D_7ip33")

[node name="StateMachine" type="Node" parent="." node_paths=PackedStringArray("initial_state")]
script = ExtResource("10_e7kkc")
initial_state = NodePath("Idle")

[node name="Idle" type="Node" parent="StateMachine" node_paths=PackedStringArray("enemy")]
script = ExtResource("11_e7kkc")
enemy = NodePath("../..")
metadata/_custom_type_script = "uid://bnj02hs5d50e"

[node name="Follow" type="Node" parent="StateMachine" node_paths=PackedStringArray("enemy")]
script = ExtResource("12_ya07s")
enemy = NodePath("../..")
metadata/_custom_type_script = "uid://d2dloh50f34bj"

[node name="ProgressBar" type="ProgressBar" parent="."]
visible = false
offset_left = -30.0
offset_top = -36.0
offset_right = 31.0
offset_bottom = -27.0
show_percentage = false

[node name="DamageTimer" type="Timer" parent="."]
wait_time = 1.5

[connection signal="body_entered" from="Detector" to="." method="_on_area_2d_body_entered"]
[connection signal="body_exited" from="Detector" to="." method="_on_area_2d_body_exited"]
